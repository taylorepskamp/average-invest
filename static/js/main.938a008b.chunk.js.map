{"version":3,"sources":["views/IndexSections/alphavantage.js","views/IndexSections/Hero.js","views/IndexSections/stockClosures.js","views/IndexSections/Tabs.js","views/App.js","index.js"],"names":["alphavantage","getDay","dateString","Date","getMonth","search","symbol","fetch","then","response","json","data","objTimeSeries","objMetaData","Object","keys","map","stockDate","newDate","date","toUTCString","day","month","close","parseFloat","catch","err","alert","Hero","className","Container","Row","style","color","Col","lg","FormGroup","Input","id","type","onChange","this","props","handleAmountChange","value","amountValue","data-type","placeholder","stock","Button","size","onClick","xmlns","preserveAspectRatio","version","viewBox","x","y","points","React","Component","stockClosures","createBlanks","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","closure","component","split","TabsSection","state","iconTabs","plainTabs","toggleNavs","e","index","preventDefault","setState","formatter","Intl","NumberFormat","currency","minimumFractionDigits","Nav","pills","role","NavItem","NavLink","aria-selected","classnames","active","href","Card","CardBody","TabContent","activeTab","TabPane","tabId","format","weeklyAmount","totalYears","remainingWeeks","control","monday","tuesday","wednesday","thursday","friday","monthlyAmount","monthStart","monthEnd","quarterAmount","quarter","yearAmount","year","Index","amount","searchResults","bind","dayCalc","handleStockChange","event","target","toUpperCase","closures","searchResultsNew","minDate","length","combined","concat","sort","a","b","filtered","filter","today","minimumDate","final","i","indexOf","start","slice","end","firstMondayIndex","finalFridayIndex","finalFinal","finalClose","mondaySum","reduce","sum","tuesdaySum","wednesdaySum","thursdaySum","fridays","totalYs","toFixed","remainingWs","fridaySum","push","prevStock","monthlyA","monthStartSum","monthEndSum","quarters","quarterA","quarterSum","years","yearA","yearSum","ref","Tabs","ReactDOM","render","path","exact","App","to","document","getElementById"],"mappings":"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cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,eAkBe1D,KAAK,SAAA2D,GAAY,IAAIC,EAAYD,EAAQE,MAAM,KAChC5D,EAAY2D,EAAU,GAAG,IAAItD,EAAMsD,EAAU,IAAI,IAAIA,EAAU,GAEnE,MAAO,CAAGtE,OAAO,SACPa,KAFI,IAAIhB,KAAKc,GAECG,cACdC,IAAK,EAAKpB,OAAOgB,GACjBK,MAAO,EAAKlB,SAASa,GACrBM,MAAM,Q,gFCxFjDuD,E,4MApIbC,MAAQ,CACNC,SAAU,EACVC,UAAW,G,EAEbC,WAAa,SAACC,EAAGJ,EAAOK,GACtBD,EAAEE,iBACF,EAAKC,SAAL,eACGP,EAAQK,K,uDA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","file":"static/js/main.938a008b.chunk.js","sourcesContent":["\nconst alphavantage = { \n    getDay(dateString){\n        let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        let d = new Date(dateString);\n        return days[d.getDay()];\n    },\n    getMonth(dateString){\n        let d = new Date(dateString);\n        return d.getMonth();\n    },\n\n    search(symbol){\n     const apikey = \"MDTO8LQSJVCOP738\"\n     return  fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=full&apikey=${apikey}`)\n        .then(response => {\n            return response.json()\n            })\n            .then(data => {\n                let objTimeSeries = data['Time Series (Daily)']\n                let objMetaData = data['Meta Data']\n                let stockDates = Object.keys(data['Time Series (Daily)'])\n                return stockDates.map(stockDate => \n                    { let newDate = new Date(stockDate)\n                      return {symbol: objMetaData['2. Symbol'],\n                              date: newDate.toUTCString(),\n                              day: this.getDay(stockDate),\n                              month: this.getMonth(stockDate),\n                              close : parseFloat(objTimeSeries[stockDate]['4. close']),\n                             }\n                    })\n                })\n        .catch(err => {\n            alert('please check your stock symbol spelling');\n        });\n    }\n }\n\nexport default alphavantage;\n    ","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { FormGroup,Input, Button, Container, Row, Col } from \"reactstrap\";\n\n\nclass Hero extends React.Component {\n  render() {\n    return (\n      <>\n        <div  className=\"position-relative\">\n          {/* Hero for FREE version */}\n          <section  className=\"section section-hero section-shaped\">\n            {/* Background circles */}\n           <div className=\"shape shape-style-3 shape-default\">\n           <span className=\"span-150\" />\n              <span className=\"span-50\" />\n              <span className=\"span-50\" />\n              <span className=\"span-75\" />\n              <span className=\"span-100\" />\n              <span className=\"span-75\" />\n              <span className=\"span-50\" />\n              <span className=\"span-100\" />\n              <span className=\"span-50\" />\n              <span className=\"span-100\" />\n             </div>\n            <Container className=\"shape-container d-flex align-items-center py-lg\">\n              <div className=\"col px-0\">\n              \n               <Row className=\"align-items-center justify-content-center\">\n               <h3 style ={{color:\"#e9ecef\"}} className=\"display-2 mb-1\">Average Invest</h3>\n               </Row>\n               <Row className=\"align-items-center justify-content-center\">\n               <Row className=\"align-items-center justify-content-center\">\n               <h5 className=\"display-5 mb-4\">compare dollar-cost-averages</h5>\n               </Row>\n               </Row>\n              \n               \n                <Row className=\"align-items-center justify-content-center\">\n\n                <Col className=\"text-center\" lg=\"3\">\n                <FormGroup>\n                <div className=\"input-group input-group-alternative mb-4\">\n                    <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\"><i className=\"fa fa-usd\"></i></span>\n                    </div>\n                    <Input\n                        id=\"currency-field\"\n                        type=\"text\"\n                        onChange= {this.props.handleAmountChange}\n                        value = {this.props.amountValue}\n                        data-type=\"currency\" \n                        placeholder=\"weekly investment\"\n                      />\n                      </div>\n                     \n                    </FormGroup>\n                </Col>\n                <Col className=\"text-center\" lg=\"3\">\n                    <FormGroup>\n                    <div className=\"input-group input-group-alternative mb-4\">\n                    <Input \n                      onChange = {this.props.stock}\n                      placeholder=\"stock symbol\" \n                      type=\"text\" />\n                    </div>\n                    </FormGroup>\n                  </Col>\n                    <Col className=\"text-center\" lg=\"1\">\n                      <FormGroup>\n                      <div className=\"input-group input-group-alternative mb-4\">\n                      <Button\n                        className=\"btn-icon mb-3 mb-sm-0\"\n                        color=\"default\"\n                        size=\"lg\"\n                        onClick = {() => this.props.search()}\n                      >\n                     \n                        <span className=\"btn-inner--text\">\n                          Calc.\n                        </span>\n                      </Button>\n                      </div>\n                      </FormGroup>\n                      \n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            {/* SVG separator */}\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-white\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </section>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Hero;\n","const stockClosures ={\n\n  getDay(dateString){\n    let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    let d = new Date(dateString);\n    return days[d.getDay()];\n  },\n\n  getMonth(dateString){\n    let d = new Date(dateString);\n    return d.getMonth();\n  },\n\n  createBlanks(){\n    const closures = ['17-Jan-2000',\n                      '21-Feb-2000',\n                      '21-Apr-2000',\n                      '29-May-2000',\n                      '04-Jul-2000',\n                      '04-Sep-2000',\n                      '23-Nov-2000',\n                      '25-Dec-2000',\n                      '01-Jan-2001',\n                      '15-Jan-2001',\n                      '19-Feb-2001',\n                      '13-Apr-2001',\n                      '28-May-2001',\n                      '04-Jul-2001',\n                      '03-Sep-2001',\n                      '11-Sep-2001',\n                      '12-Sep-2001',\n                      '13-Sep-2001',\n                      '14-Sep-2001',\n                      '22-Nov-2001',\n                      '25-Dec-2001',\n                      '01-Jan-2002',\n                      '21-Jan-2002',\n                      '18-Feb-2002',\n                      '29-Mar-2002',\n                      '27-May-2002',\n                      '04-Jul-2002',\n                      '02-Sep-2002',\n                      '28-Nov-2002',\n                      '25-Dec-2002',\n                      '01-Jan-2003',\n                      '20-Jan-2003',\n                      '17-Feb-2003',\n                      '18-Apr-2003',\n                      '26-May-2003',\n                      '04-Jul-2003',\n                      '01-Sep-2003',\n                      '27-Nov-2003',\n                      '25-Dec-2003',\n                      '01-Jan-2004',\n                      '19-Jan-2004',\n                      '16-Feb-2004',\n                      '09-Apr-2004',\n                      '31-May-2004',\n                      '11-Jun-2004',\n                      '05-Jul-2004',\n                      '06-Sep-2004',\n                      '25-Nov-2004',\n                      '24-Dec-2004',\n                      '17-Jan-2005',\n                      '21-Feb-2005',\n                      '25-Mar-2005',\n                      '30-May-2005',\n                      '04-Jul-2005',\n                      '05-Sep-2005',\n                      '24-Nov-2005',\n                      '26-Dec-2005',\n                      '02-Jan-2006',\n                      '16-Jan-2006',\n                      '20-Feb-2006',\n                      '14-Apr-2006',\n                      '29-May-2006',\n                      '04-Jul-2006',\n                      '04-Sep-2006',\n                      '23-Nov-2006',\n                      '25-Dec-2006',\n                      '01-Jan-2007',\n                      '02-Jan-2007',\n                      '15-Jan-2007',\n                      '19-Feb-2007',\n                      '06-Apr-2007',\n                      '28-May-2007',\n                      '04-Jul-2007',\n                      '03-Sep-2007',\n                      '22-Nov-2007',\n                      '25-Dec-2007',\n                      '01-Jan-2008',\n                      '21-Jan-2008',\n                      '18-Feb-2008',\n                      '21-Mar-2008',\n                      '26-May-2008',\n                      '04-Jul-2008',\n                      '01-Sep-2008',\n                      '27-Nov-2008',\n                      '25-Dec-2008',\n                      '01-Jan-2009',\n                      '19-Jan-2009',\n                      '16-Feb-2009',\n                      '10-Apr-2009',\n                      '25-May-2009',\n                      '03-Jul-2009',\n                      '07-Sep-2009',\n                      '26-Nov-2009',\n                      '25-Dec-2009',\n                      '01-Jan-2010',\n                      '18-Jan-2010',\n                      '15-Feb-2010',\n                      '02-Apr-2010',\n                      '31-May-2010',\n                      '05-Jul-2010',\n                      '06-Sep-2010',\n                      '25-Nov-2010',\n                      '24-Dec-2010',\n                      '17-Jan-2011',\n                      '21-Feb-2011',\n                      '22-Apr-2011',\n                      '30-May-2011',\n                      '04-Jul-2011',\n                      '05-Sep-2011',\n                      '24-Nov-2011',\n                      '26-Dec-2011',\n                      '02-Jan-2012',\n                      '16-Jan-2012',\n                      '20-Feb-2012',\n                      '06-Apr-2012',\n                      '28-May-2012',\n                      '04-Jul-2012',\n                      '03-Sep-2012',\n                      '29-Oct-2012',\n                      '30-Oct-2012',\n                      '22-Nov-2012',\n                      '25-Dec-2012',\n                      '01-Jan-2013',\n                      '21-Jan-2013',\n                      '18-Feb-2013',\n                      '29-Mar-2013',\n                      '27-May-2013',\n                      '04-Jul-2013',\n                      '02-Sep-2013',\n                      '28-Nov-2013',\n                      '25-Dec-2013',\n                      '01-Jan-2014',\n                      '20-Jan-2014',\n                      '17-Feb-2014',\n                      '18-Apr-2014',\n                      '26-May-2014',\n                      '04-Jul-2014',\n                      '01-Sep-2014',\n                      '27-Nov-2014',\n                      '25-Dec-2014',\n                      '01-Jan-2015',\n                      '19-Jan-2015',\n                      '16-Feb-2015',\n                      '03-Apr-2015',\n                      '25-May-2015',\n                      '03-Jul-2015',\n                      '07-Sep-2015',\n                      '26-Nov-2015',\n                      '25-Dec-2015',\n                      '01-Jan-2016',\n                      '18-Jan-2016',\n                      '15-Feb-2016',\n                      '25-Mar-2016',\n                      '30-May-2016',\n                      '04-Jul-2016',\n                      '05-Sep-2016',\n                      '24-Nov-2016',\n                      '26-Dec-2016',\n                      '02-Jan-2017',\n                      '16-Jan-2017',\n                      '20-Feb-2017',\n                      '14-Apr-2017',\n                      '29-May-2017',\n                      '04-Jul-2017',\n                      '04-Sep-2017',\n                      '23-Nov-2017',\n                      '25-Dec-2017',\n                      '01-Jan-2018',\n                      '15-Jan-2018',\n                      '19-Feb-2018',\n                      '30-Mar-2018',\n                      '28-May-2018',\n                      '04-Jul-2018',\n                      '03-Sep-2018',\n                      '22-Nov-2018',\n                      '05-Dec-2018',\n                      '25-Dec-2018',\n                      '01-Jan-2019',\n                      '21-Jan-2019',\n                      '18-Feb-2019',\n                      '19-Apr-2019',\n                      '27-May-2019',\n                      '04-Jul-2019',\n                      '02-Sep-2019',\n                      '28-Nov-2019',\n                      '25-Dec-2019',\n                      '01-Jan-2020',\n                      '20-Jan-2020',\n                      '17-Feb-2020',\n                      '10-Apr-2020',\n                      '25-May-2020',\n                      '03-Jul-2020',\n                      '07-Sep-2020',\n                      '26-Nov-2020',\n                      '25-Dec-2020',\n                      '01-Jan-2021',\n                      '18-Jan-2021',\n                      '15-Feb-2021',\n                      '02-Apr-2021',\n                      '31-May-2021',\n                      '05-Jul-2021',\n                      '06-Sep-2021',\n                      '25-Nov-2021',\n                      '24-Dec-2021',\n                      '17-Jan-2022',\n                      '21-Feb-2022',\n                      '15-Apr-2022',\n                      '30-May-2022',\n                      '04-Jul-2022',\n                      '05-Sep-2022',\n                      '24-Nov-2022',\n                      '26-Dec-2022',\n                      '02-Jan-2023',\n                      '16-Jan-2023',\n                      '20-Feb-2023',\n                      '07-Apr-2023',\n                      '29-May-2023']\n\n                      const month = {\n                        Jan:'01',\n                        Feb:'02',\n                        Mar:'03',\n                        Apr:'04',\n                        May:'05',\n                        Jun:'06',\n                        Jul:'07',\n                        Aug:'08',\n                        Sep:'09',\n                        Oct:'10',\n                        Nov:'11',\n                        Dec:'12',\n                      }\n                      \n                    \n  const formattedClosures = closures.map( closure => {let component = closure.split(\"-\")\n                                                let stockDate = component[2]+\"-\"+month[component[1]]+\"-\"+component[0]\n                                                let newDate = new Date(stockDate)\n                                                return {  symbol:'closed',\n                                                          date: newDate.toUTCString(),\n                                                          day: this.getDay(stockDate),\n                                                          month: this.getMonth(stockDate),\n                                                          close:0,\n                                                        }\n                                                })\n  return formattedClosures\n  }\n\n\n\n}\nexport default stockClosures;\n","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classnames from \"classnames\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  TabContent,\n  TabPane,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass TabsSection extends React.Component {\n  state = {\n    iconTabs: 1,\n    plainTabs: 1\n  };\n  toggleNavs = (e, state, index) => {\n    e.preventDefault();\n    this.setState({\n      [state]: index\n    });\n  };\n  render() {\n\n    const formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    })\n    return (\n      <>\n        \n        <Row className=\"justify-content-center\">\n            \n          <Col className=\"mt-5 mt-lg-0\" lg=\"10\">\n            {/* Menu */}\n            <div className=\"mb-3\">\n            <h3 className=\"h4 text-success font-weight-bold mb-4\">Why Dollar Cost Average?</h3>\n              <small>\n                     <p> Continuous investing frees an investor from the difficulty of timing the market and guarantees an average return. But how often should you invest to achieve the optimal average? Let's explore 4 scenarios.</p>\n              </small>\n            </div>\n            <div className=\"nav-wrapper\">\n              <Nav\n                className=\"nav-fill flex-column flex-md-row\"\n                id=\"tabs-icons-text\"\n                pills\n                role=\"tablist\"\n              >\n                <NavItem>\n                  <NavLink\n                    aria-selected={this.state.plainTabs === 1}\n                    className={classnames(\"mb-sm-3 mb-md-0\", {\n                      active: this.state.plainTabs === 1\n                    })}\n                    onClick={e => this.toggleNavs(e, \"plainTabs\", 1)}\n                    href=\"#pablo\"\n                    role=\"tab\"\n                  >\n                    Weekly\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    aria-selected={this.state.plainTabs === 2}\n                    className={classnames(\"mb-sm-3 mb-md-0\", {\n                      active: this.state.plainTabs === 2\n                    })}\n                    onClick={e => this.toggleNavs(e, \"plainTabs\", 2)}\n                    href=\"#pablo\"\n                    role=\"tab\"\n                  >\n                    Monthly\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    aria-selected={this.state.plainTabs === 3}\n                    className={classnames(\"mb-sm-3 mb-md-0\", {\n                      active: this.state.plainTabs === 3\n                    })}\n                    onClick={e => this.toggleNavs(e, \"plainTabs\", 3)}\n                    href=\"#pablo\"\n                    role=\"tab\"\n                  >\n                    Quarterly\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    aria-selected={this.state.plainTabs === 4}\n                    className={classnames(\"mb-sm-3 mb-md-0\", {\n                      active: this.state.plainTabs === 4\n                    })}\n                    onClick={e => this.toggleNavs(e, \"plainTabs\", 4)}\n                    href=\"#pablo\"\n                    role=\"tab\"\n                  >\n                    Yearly\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n            <Card className=\"shadow\">\n              <CardBody>\n                <TabContent activeTab={\"plainTabs\" + this.state.plainTabs}>\n                  <TabPane tabId=\"plainTabs1\">\n                  <p className=\"description\"> You invested {formatter.format(this.props.weeklyAmount)} in {this.props.stock} on a <b>weekly</b> basis for {this.props.totalYears} years and {this.props.remainingWeeks} weeks. Here are the amounts for each day of the week that the NYSE was open:</p>\n                    <p className=\"description\">Total Amount Invested: {formatter.format(this.props.control)}</p>\n                    <p className=\"description\">Investing Weekly on a Monday: {formatter.format(this.props.monday)}</p>\n                    <p className=\"description\">Investing Weekly on a Tuesday: {formatter.format(this.props.tuesday)}</p>\n                    <p className=\"description\">Investing Weekly on a Wednesday: {formatter.format(this.props.wednesday)}</p>\n                    <p className=\"description\">Investing Weekly on a Thursday: {formatter.format(this.props.thursday)}</p>\n                    <p className=\"description\">Investing Weekly on a Friday: {formatter.format(this.props.friday)}</p>    \n                    \n                  </TabPane>\n                  <TabPane tabId=\"plainTabs2\">\n                  <p className=\"description\"> You invested {formatter.format(this.props.monthlyAmount)} in {this.props.stock} on a <b>monthly</b> basis for {this.props.totalYears} years and {this.props.remainingWeeks} weeks. Here are the returns for the first and last days of the month that the NYSE was open:</p>\n                    <p className=\"description\">Total Amount Invested: {formatter.format(this.props.control)}</p>\n                    <p className=\"description\">First Day of the Month: {formatter.format(this.props.monthStart)}</p>\n                    <p className=\"description\">Last Day of the Month: {formatter.format(this.props.monthEnd)}</p>\n                  </TabPane>\n                  <TabPane tabId=\"plainTabs3\">\n                    \n                    <p className=\"description\"> You invested {formatter.format(this.props.quarterAmount)} in {this.props.stock} on a <b >quarterly </b> basis for {this.props.totalYears} years and {this.props.remainingWeeks} weeks. Here are the returns for the first day that the NYSE was open of each quarter:</p>\n                    <p className=\"description\">Total Amount Invested: {formatter.format(this.props.control)}</p>\n                    <p className=\"description\">First Day of the Quarter: {formatter.format(this.props.quarter)}</p>\n                    </TabPane>\n                    <TabPane tabId=\"plainTabs4\">\n                    \n                    <p className=\"description\"> You invested {formatter.format(this.props.yearAmount)} in {this.props.stock} on a yearly basis for {this.props.totalYears} years and {this.props.remainingWeeks} weeks. Here are the returns for the first day that the NYSE was open of each January :</p>\n                    <p className=\"description\">Total Amount Invested: {formatter.format(this.props.control)}</p>\n                    <p className=\"description\">First Day of the Year: {formatter.format(this.props.year)}</p>\n                    </TabPane>\n                </TabContent>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default TabsSection;\n","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Container, } from \"reactstrap\";\nimport alphavantage from './IndexSections/alphavantage.js';\nimport Hero from \"./IndexSections/Hero.js\";\nimport stockClosures from \"./IndexSections/stockClosures.js\";\nimport Tabs from \"./IndexSections/Tabs.js\";\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      amount:\"\",\n      stock:\"some stock\",\n      searchResults:[\n                       {symbol: 'XYZ',\n                        date: '2020-04-21',\n                        close : 123.4,\n                        day: 'Monday'},\n                    ],\n      monday:0,\n      tuesday:0,\n      wednesday:0,\n      thursday:0,\n      friday:0,\n      control:0,\n      totalYears:0,\n      remainingWeeks:0,\n      weeklyAmount:0,\n      monthlyAmount:0,\n      monthStart:0,\n      monthEnd:0,\n      quarterAmount:0,\n      quarter:0,\n      yearAmount:0,\n      year:0,\n      \n      }\n    this.search = this.search.bind(this);\n    this.dayCalc = this.dayCalc.bind(this);\n    this.handleAmountChange = this.handleAmountChange.bind(this)\n    this.handleStockChange = this.handleStockChange.bind(this)\n  }\n\n  getInitialState(){\n    return ({amount: \"0.00\"});\n  }\n\n  handleAmountChange(event){\n    this.setState({amount:event.target.value})\n  }\n\n  handleStockChange(event){\n    this.setState({stock: event.target.value.toUpperCase()})\n  }\n\n  search(){\n    //creates data set of blanks from closures\n    const closures = stockClosures.createBlanks()\n    //api call to alphavantage\n    alphavantage.search(this.state.stock).then(searchResultsNew =>  \n      { \n        let minDate = searchResultsNew[searchResultsNew.length-1].date\n        //combines blanks with api results\n        let combined = searchResultsNew.concat(closures)\n        //sorts them by date\n        combined.sort((a,b) => {\n          let c = new Date(a.date);\n          let d = new Date(b.date)\n          return c-d})\n        //filters out blanks that occur in the future and in the past. slices to ensure start on monday and ends on friday\n        let filtered = combined.filter(stock => {\n          let today = new Date()\n          let stockDate = new Date(stock.date)\n          let minimumDate = new Date(minDate)\n          return (stockDate < today) && (stockDate > minimumDate)})\n        //adds closing price for next entry\n        let final = filtered.map(stock=>{\n          if(stock.symbol === 'closed')\n            { let i = filtered.indexOf(stock);\n              while (filtered[i].symbol === 'closed'){\n                    i++\n                    stock.close = filtered[i].close\n                  }\n            }\n          return stock\n          })\n        ///trims data set to start on a monday and end on a friday\n        let start = final.slice(0,5)\n        let end = final.slice(-5,)\n        let firstMondayIndex = start.map(stock => {return stock.day}).indexOf('Monday');\n        let finalFridayIndex = end.map(stock => {return stock.day}).indexOf('Friday');\n        let finalFinal = final.slice(firstMondayIndex, (final.length - (4 - finalFridayIndex)))\n        \n    this.setState({searchResults: finalFinal})\n    this.dayCalc()})\n    }\n    dayCalc(){\n      const finalClose = this.state.searchResults[this.state.searchResults.length-1].close\n      const mondays = this.state.searchResults.filter(stock => {return stock.day === \"Monday\"})\n      const mondaySum = mondays.reduce( (sum, stock) => {return sum + (this.state.amount/stock.close*finalClose)}, 0)\n      const tuesdays = this.state.searchResults.filter(stock => {return stock.day === \"Tuesday\"})\n      const tuesdaySum = tuesdays.reduce( (sum, stock) => {return sum + (this.state.amount/stock.close*finalClose)}, 0)\n      const wednesdays = this.state.searchResults.filter(stock => {return stock.day === \"Wednesday\"})\n      const wednesdaySum = wednesdays.reduce( (sum, stock) => {return sum + (this.state.amount/stock.close*finalClose)}, 0)\n      const thursdays = this.state.searchResults.filter(stock => {return stock.day === \"Thursday\"})\n      const thursdaySum = thursdays.reduce( (sum, stock) => {return sum + (this.state.amount/stock.close*finalClose)}, 0)\n      const fridays = this.state.searchResults.filter(stock => {return stock.day === \"Friday\"})\n      const totalYs = (fridays.length/52).toFixed(0) \n      const remainingWs = fridays.length%52\n      const fridaySum = fridays.reduce( (sum, stock) => {return sum + (this.state.amount/stock.close*finalClose)}, 0)\n      //creates array of the min day in each month\n      let monthStart = []\n      let monthEnd = []\n      monthStart.push(this.state.searchResults[0])\n      for (let i =1; i<this.state.searchResults.length;i++){\n        let stock = this.state.searchResults[i]\n        let prevStock = this.state.searchResults[i-1]\n        if(stock.month !== prevStock.month){\n          monthStart.push(stock)\n          monthEnd.push(prevStock)\n        }\n      }\n      monthEnd.push(this.state.searchResults[this.state.searchResults.length-1])\n      //month calc\n      let monthlyA = (fridays.length*this.state.amount)/monthStart.length\n      const monthStartSum = monthStart.reduce( (sum, stock) => {return sum + (monthlyA/stock.close*finalClose)}, 0)\n      const monthEndSum = monthEnd.reduce( (sum, stock) => {return sum + (monthlyA/stock.close*finalClose)}, 0)\n      //quarter calc\n      let quarters = monthStart.filter(stock => {return (stock.month === 0) || (stock.month === 3) || (stock.month === 6) || (stock.month ===9)})\n      let quarterA = (fridays.length*this.state.amount)/quarters.length\n      const quarterSum = quarters.reduce( (sum, stock) => {return sum + (quarterA/stock.close*finalClose)}, 0)\n      //year calc\n      let years = monthStart.filter(stock => {return stock.month === 0 })\n      let yearA = (fridays.length*this.state.amount)/years.length\n      const yearSum = years.reduce( (sum, stock) => {return sum + (yearA/stock.close*finalClose)}, 0)\n\n\n      this.setState({control:fridays.length*this.state.amount})\n      this.setState({totalYears:totalYs})\n      this.setState({remainingWeeks:remainingWs})\n      this.setState({monday:mondaySum})\n      this.setState({tuesday:tuesdaySum})\n      this.setState({wednesday:wednesdaySum})\n      this.setState({thursday:thursdaySum})\n      this.setState({friday:fridaySum})\n      this.setState({weeklyAmount:this.state.amount})\n      this.setState({monthStart: monthStartSum})\n      this.setState({monthEnd: monthEndSum})\n      this.setState({monthlyAmount: monthlyA})\n      this.setState({quarter:quarterSum})\n      this.setState({quarterAmount: quarterA})\n      this.setState({year:yearSum})\n      this.setState({yearAmount: yearA})\n    }\n\n    \n\n  render() {\n \n    return (\n      <>\n      <main ref=\"main\">\n        <Hero search ={this.search} \n              handleAmountChange = {this.handleAmountChange} \n              stock = {this.handleStockChange}\n              amount = {this.state.amount} />\n        \n        <section className=\"section section-sm\">\n            <Container>\n            <Tabs \n                totalYears = {this.state.totalYears}\n                searchResults = {this.state.searchResults}\n                remainingWeeks = {this.state.remainingWeeks}\n                control = {this.state.control}\n                weeklyAmount = {this.state.weeklyAmount}\n                monthlyAmount = {this.state.monthlyAmount}\n                monthStart = {this.state.monthStart}\n                monthEnd = {this.state.monthEnd}\n                monday = {this.state.monday}\n                tuesday = {this.state.tuesday}\n                wednesday = {this.state.wednesday}\n                thursday = {this.state.thursday}\n                friday = {this.state.friday}\n                stock = {this.state.stock}\n                quarter ={this.state.quarter}\n                quarterAmount = {this.state.quarterAmount}\n                year ={this.state.year}\n                yearAmount = {this.state.yearAmount}\n            />\n            </Container>\n          </section>\n            \n      </main>\n     \n    </>\n    );\n  }\n}\n\nexport default Index;\n","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/vendor/nucleo/css/nucleo.css\";\nimport \"assets/vendor/font-awesome/css/font-awesome.min.css\";\nimport \"assets/scss/argon-design-system-react.scss?v1.1.0\";\n\nimport App from \"./views/App\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" exact render={props => <App {...props} />} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}